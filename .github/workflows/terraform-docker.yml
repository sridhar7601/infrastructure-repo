name: Terraform & Docker Deployment

on:
  workflow_call:  # Called by app-repo
    inputs:
      environment:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true  # Prefer using a Docker Access Token instead

  workflow_dispatch:  # Allows manual trigger from infrastructure-repo

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init & Apply
        run: |
          terraform init
          terraform fmt -check  # Ensure Terraform files are properly formatted
          terraform apply -auto-approve -var="environment=${{ inputs.environment }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Force Docker Logout
        run: docker logout || echo "No existing session"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  # Use an Access Token instead of a password

      - name: Build Docker Image
        run: docker build -t myapp .

      - name: Tag Docker Image
        run: docker tag myapp mydockerhub/myapp:latest

      - name: Push Docker Image to Docker Hub
        run: docker push mydockerhub/myapp:latest
